{
  "problems": {
    "problem_1": {
      "description": "Task related to setting a table, nothing romantic",
      "graph": ["Shelbiana","Allensville", "Parole"],
      "goal": "set the table for two people",
      "objects": {
        "kitchenware" :["plate", "fork", "knife", "spoon", "glass", "napkin", "fork", "knife", "spoon", "glass", "napkin"]
      },
      "relaxation_expected": false
    },
    "problem_2": {
      "description": "Task related to setting a table, but only two plates are available but a bowl is available to replace the missing plate",
      "graph": ["Shelbiana","Allensville", "Parole"],
      "goal": "set the table for three people",
      "objects": {
        "kitchenware" :["plate", "fork", "knife", "spoon", "glass", "napkin","fork","fork", "knife", "knife", "bowl", "plate"]
      },
      "relaxation_expected": true
    },
    "problem_3": {
      "description": "Task related to setting a table, with a rose",
      "graph": ["Shelbiana","Allensville", "Parole"],
      "goal": "set the table for four people",
      "objects": {
          "kitchenware" :["plate", "fork", "knife", "spoon", "glass", "napkin","fork","fork", "bowl", "plate", "plate", "fork",
          "knife","knife", "rose", "rose", "rose", "rose", "vase"]
      },
      "relaxation_expected": false
    },
    "problem_4": {
      "description": "Task related to setting a table for soup",
      "graph": ["Shelbiana","Allensville", "Parole"],
      "goal": "set the table for two people, we'll have soup",
      "objects": {
          "kitchenware" :["plate", "fork", "knife", "spoon", "glass", "napkin", "fork","fork", "bowl", "plate", "plate", "fork",
          "knife","knife", "rose", "rose", "rose", "rose", "vase"]
      },
      "relaxation_expected": false
    },
    "problem_5": {
      "description": "Task related to setting a buffet table for a party",
      "graph": ["Shelbiana","Allensville", "Parole"],
      "goal": "set the table for a party, try decorating it",
      "objects": {
          "kitchenware" :["plate", "fork", "knife", "spoon", "glass", "napkin", "fork","fork", "bowl", "plate", "plate", "fork",
          "knife","knife", "balloon", "balloon", "rose", "rose", "vase"]
      },
      "relaxation_expected": false
    },
    "problem_6": {
      "description": "Task related to setting a buffet table for a professional meeting",
      "graph": ["Shelbiana","Allensville", "Parole"],
      "goal": "set the table for a buffet after a work meeting, try keeping it professional",
      "objects": {
          "kitchenware" :["plate", "fork", "knife", "spoon", "glass", "napkin", "fork","fork", "bowl", "plate", "plate", "fork",
          "knife","knife", "balloon", "balloon", "rose", "rose", "vase"]
      },
      "relaxation_expected": false
    }
  },
  "domain": {
    "actions": [
      {
        "name": "move_to",
        "description": "This action moves a robot from one room to another. Arguments: robot (the robot to be moved), from (the room the robot is currently in), to (the room the robot will move to). Preconditions: the robot must be in the 'from' room. Postconditions: the robot is no longer in the 'from' room and is now in the 'to' room."
      },
      {
        "name": "grab",
        "description": "This action allows a robot to grab a grabbable object in a room. Arguments: robot (the robot that will grab the object), what (the grabbable object to be grabbed), where (the room where the object is located). Preconditions: the robot and the object must be in the same room, and the robot must be free (not holding anything). Postconditions: the robot is holding the object, and the object is no longer in the room."
      },
      {
        "name": "drop",
        "description": "This action allows a robot to drop a grabbable object it is holding in a room. Arguments: robot (the robot that will drop the object), what (the grabbable object to be dropped), where (the room where the object will be dropped). Preconditions: the robot must be in the room and holding the object. Postconditions: the robot is no longer holding the object, the robot is free, and the object is now in the room."
      },
      {
        "name": "put_on",
        "description": "This action allows a robot to place a grabbable object onto a surface in a room. Arguments: robot (the robot that will place the object), what (the grabbable object to be placed), on (the surface where the object will be placed), where (the room where the action takes place). Preconditions: the robot, the surface, and the object must be in the same room, and the robot must be holding the object. Postconditions: the robot is no longer holding the object, the object is on the surface, and the robot is free."
      },
      {
        "name": "take_from",
        "description": "This action allows a robot to take a grabbable object from a surface in a room. Arguments: robot (the robot that will take the object), what (the grabbable object to be taken), from (the surface where the object is located), where (the room where the action takes place). Preconditions: the robot, the surface, and the object must be in the same room, and the robot must be free (not holding anything). Postconditions: the robot is holding the object, the object is no longer on the surface, and the robot is no longer free."
      }
    ],
    "objects": [
      {
        "type": "room",
        "description": "A room is a location where actions can take place. Examples include dining room, kitchen, bedroom, etc."
      },
      {
        "type": "locatable",
        "description": "A locatable object is any object that can be located in a room. This includes robots and grabbable objects."
      },
      {
        "type": "robot",
        "description": "A robot is an entity that can move between rooms and interact with grabbable objects."
      },
      {
        "type": "grabbable",
        "description": "A grabbable object is any object that a robot can pick up and move. Examples include pc parts, kitchenware, etc."
      },
      {
        "type": "surface",
        "description": "A surface is a locatable object on which other objects can be placed. Examples include tables, countertops, etc."
      }
    ]
  }
}