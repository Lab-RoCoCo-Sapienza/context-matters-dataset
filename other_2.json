{
  "problems": {
    "problem_1": {
      "description": "Task related to organizing art supplies in the creative studio.",
      "graph": ["McDade","Merom","Mifflinburg","Muleshoe","Newfields","Noxapater"],
      "goal": "Arrange all art supplies on the shelves.",
      "objects": {
        "objects": ["paintbrush", "palette", "easel", "canvas", "water cup", "oil paint", "acrylic paint", "sketchpad", "charcoal", "pastels", "marker", "spray paint", "shelf"]
      },
      "relaxation_expected": false
    },
    "problem_2": {
      "description": "Task related to organizing electronic equipment in the tech lab.",
      "graph": ["McDade","Merom","Mifflinburg","Muleshoe","Newfields","Noxapater"],
      "goal": "Place all electronic devices on the designated workstations.",
      "objects": {
        "objects": ["laptop", "tablet", "smartphone", "monitor", "keyboard", "mouse", "printer", "router", "external hard drive", "webcam", "charger"]
      },
      "relaxation_expected": false
    },
    "problem_3": {
      "description": "Task related to arranging kitchen utensils and appliances.",
      "graph": ["McDade","Merom","Mifflinburg","Muleshoe","Newfields","Noxapater"],
      "goal": "Collect and organize all kitchen utensils and appliances on the counters.",
      "objects": {
        "objects": ["knife", "spoon", "fork", "plate", "cup", "blender", "microwave", "toaster", "pot", "pan", "cutting board", "colander", "counter"]
      },
      "relaxation_expected": false
    },
    "problem_4": {
      "description": "Task related to organizing books in a library setting.",
      "graph": ["McDade","Merom","Mifflinburg","Muleshoe","Newfields","Noxapater"],
      "goal": "Categorize and place all books on their respective shelves.",
      "objects": {
        "objects": ["novel", "textbook", "magazine", "journal", "dictionary", "encyclopedia", "comic book", "atlas", "manual", "guide", "library"]
      },
      "relaxation_expected": false
    },
    "problem_5": {
      "description": "Task related to organizing various sports equipment.",
      "graph": ["McDade","Merom","Mifflinburg","Muleshoe","Newfields","Noxapater"],
      "goal": "Place all sports equipment in the bedroom",
      "objects": {
        "objects": ["basketball", "soccer ball", "tennis racket", "baseball bat", "golf club", "volleyball", "dumbbell", "yoga mat", "skipping rope", "boxing gloves"]
      },
      "relaxation_expected": false
    },
    "problem_6": {
      "description": "Task related to arranging office supplies neatly.",
      "graph": ["McDade","Merom","Mifflinburg","Muleshoe","Newfields","Noxapater"],
      "goal": "Organize all office supplies into designated compartments on the desk.",
      "objects": {
        "objects": ["pen", "pencil", "stapler", "notebook", "paper clips", "scissors", "tape", "calculator", "highlighter", "folder", "binder", "desk"]
      },
      "relaxation_expected": false
    },
    "problem_7": {
      "description": "Task related to sorting and organizing garden tools.",
      "graph": ["McDade","Merom","Mifflinburg","Muleshoe","Newfields","Noxapater"],
      "goal": "Place all garden tools in kitchen",
      "objects": {
        "objects": ["shovel", "rake", "hoe", "pruning shears", "watering can", "lawn mower", "gloves", "wheelbarrow", "trowel", "garden fork"]
      },
      "relaxation_expected": false
    },
    "problem_8": {
      "description": "Task related to arranging musical instruments neatly.",
      "graph": ["McDade","Merom","Mifflinburg","Muleshoe","Newfields","Noxapater"],
      "goal": "Arrange all musical instruments on living room",
      "objects": {
        "objects": ["guitar", "piano", "drum set", "violin", "flute", "saxophone", "trumpet", "cello", "clarinet", "keyboard"]
      },
      "relaxation_expected": false
    },
    "problem_9": {
      "description": "Task related to sorting and storing cleaning supplies.",
      "graph": ["McDade","Merom","Mifflinburg","Muleshoe","Newfields","Noxapater"],
      "goal": "Sort and store all cleaning supplies into labeled storage units.",
      "objects": {
        "objects": ["broom", "mop", "bucket", "cleaning spray", "detergent", "sponge", "gloves", "brush", "dustpan", "squeegee"]
      },
      "relaxation_expected": false
    }
  },
  "domain": {
    "actions": [
      {
        "name": "move_to",
        "description": "This action moves a robot from one room to another. Arguments: robot (the robot to be moved), from (the room the robot is currently in), to (the room the robot will move to). Preconditions: the robot must be in the 'from' room. Postconditions: the robot is no longer in the 'from' room and is now in the 'to' room."
      },
      {
        "name": "grab",
        "description": "This action allows a robot to grab a grabbable object in a room. Arguments: robot (the robot that will grab the object), what (the grabbable object to be grabbed), where (the room where the object is located). Preconditions: the robot and the object must be in the same room, and the robot must be free (not holding anything). Postconditions: the robot is holding the object, and the object is no longer in the room."
      },
      {
        "name": "drop",
        "description": "This action allows a robot to drop a grabbable object it is holding in a room. Arguments: robot (the robot that will drop the object), what (the grabbable object to be dropped), where (the room where the object will be dropped). Preconditions: the robot must be in the room and holding the object. Postconditions: the robot is no longer holding the object, the robot is free, and the object is now in the room."
      },
      {
        "name": "put_inside",
        "description": "This action allows a robot to put a grabbable object inside a container in a room. Arguments: robot (the robot that will put the object inside), what (the grabbable object to be put inside), inside (the container), where (the room where the container is located). Preconditions: the robot must be in the room, the container must be in the room, and the robot must be holding the object. Postconditions: the robot is no longer holding the object, the object is inside the container, and the robot is free."
      },
      {
        "name": "extract_from",
        "description": "This action allows a robot to extract a grabbable object from a container in a room. Arguments: robot (the robot that will extract the object), what (the grabbable object to be extracted), inside (the container), where (the room where the container is located). Preconditions: the robot must be in the room, the container must be in the room, the object must be inside the container, and the robot must be free. Postconditions: the robot is holding the object, the object is no longer inside the container, and the robot is no longer free."
      }
    ],
    "objects": [
      {
        "type": "room",
        "description": "A room is a location where actions can take place. Examples include dining room, kitchen, bedroom, etc."
      },
      {
        "type": "locatable",
        "description": "A locatable object is any object that can be located in a room. This includes robots and grabbable objects."
      },
      {
        "type": "robot",
        "description": "A robot is an entity that can move between rooms and interact with grabbable objects."
      },
      {
        "type": "grabbable",
        "description": "A grabbable object is any object that a robot can pick up and move. Examples include pc parts, kitchenware, etc."
      },
      {
        "type": "container",
        "description": "A container is an object that can hold grabbable objects. Examples include bins, boxes, etc."
      }
    ]
  }
}

