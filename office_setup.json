{
  "problems": {
    "problem_1": {
      "description": "Task related to setting up an office",
      "graph": ["Shelbiana", "Allensville", "Parole"],
      "goal": "empty from the shelf and locker, and put the desk, the lamp, the shelf, and the locker in the living room after emptying them",
      "objects": {
        "office_objects": ["desk", "lamp", "shelf", "locker"],
        "objects_in_shelf": ["book into the shelf"],
        "objects_in_locker": ["laptop into the locker"]
      },
      "relaxation_expected": false
    },
    "problem_2": {
      "description": "task related to setting up an office, the locker is already empty",
      "graph": ["Shelbiana", "Allensville", "Parole"],
      "goal": "empty from the shelf and locker, and put the desk, the lamp, the shelf, and the locker in the living room after emptying them",
      "objects": {
        "office_objects": ["desk", "lamp", "shelf", "locker"],
        "objects_in_shelf": ["book into the shelf"]
      },
      "relaxation_expected": false
    },
    "problem_3": {
      "description": "task related to setting up an office, the shelf and the locker are already empty",
      "graph": ["Shelbiana", "Allensville", "Parole"],
      "goal": "empty from the shelf and locker, and put the desk, the lamp, the shelf, and the locker in the living room after emptying them",
      "objects": {
        "office_objects": ["desk", "lamp", "shelf", "locker"]
      },
      "relaxation_expected": false
    },
    "problem_4": {
      "description": "Task related to setting up an office in which the robot is required to put the objects back in the container where they were stored originally after moving it",
      "graph": ["Shelbiana", "Allensville", "Parole"],
      "goal": "empty from the shelf and locker, and put the desk, the lamp, the shelf, and the locker in the living, then put the objects back in the container where they were located originally",
      "objects": {
        "office_objects": ["desk", "lamp", "shelf", "locker"],
        "objects_in_shelf": ["book into the shelf"],
        "objects_in_locker": ["laptop into the locker"]
      },
      "relaxation_expected": false
    },
    "problem_5": {
      "description": "Task related to setting up an office in which the robot is required to put the objects all on the shelf after moving it",
      "graph": ["Shelbiana", "Allensville", "Parole"],
      "goal": "empty from the shelf and locker, and put the desk, the lamp, the shelf, and the locker in the living room after emptying them, then put all the objects, that were originally located in other containers, inside the shelf that you just moved",
      "objects": {
        "office_objects": ["desk", "lamp", "shelf", "locker"],
        "objects_in_shelf": ["book into the shelf"],
        "objects_in_locker": ["laptop into the locker"]
      }
    },
    "problem_6": {
      "description": "task related to setting up an office but the shelf is missing and the locker is already empty",
      "graph": ["Shelbiana", "Allensville", "Parole"],
      "goal": "empty from the shelf and locker, and put the desk, the lamp, the shelf, and the locker in the living room after emptying them",
      "objects": {
        "office_objects": ["desk", "lamp", "locker"]
      },
      "relaxation_expected": true
    },
    "problem_7": {
      "description": "task related to setting up an office and moving all the objects to the shelf but the shelf is missing",
      "graph": ["Shelbiana", "Allensville", "Parole"],
      "goal": "put the desk, the lamp, the shelf, and the locker in the living room and then put all the previous contents on the shelf",
      "objects": {
        "office_objects": ["desk", "lamp", "locker"],
        "objects_in_locker": ["laptop into the locker", "mouse into the locker", "keyboard into the locker", "headphone into the locker"]
      },
      "relaxation_expected": true
    },
    "problem_8": {
      "description": "task related to setting up an office and moving all the objects to the shelf but the shelf is missing and the locker is empty",
      "graph": ["Shelbiana", "Allensville", "Parole"],
      "goal": "put the shelf, and the locker in the living room and then put all the previous contents of the shelf inside the locker",
      "objects": {
        "office_objects": ["desk", "lamp", "locker"]
      },
      "relaxation_expected": true
    }
  },
  "domain": {
    "actions": [
      {
        "name": "move_to",
        "description": "The robot moves from one room to another. Arguments: the robot, the starting room, and the destination room. Preconditions: the robot is in the starting room. Postconditions: the robot is no longer in the starting room and is now in the destination room."
      },
      {
        "name": "grab",
        "description": "The robot grabs an object. Arguments: the robot, the object to be grabbed, and the room where the object is located. Preconditions: the robot and the object are in the same room, and the robot is free to grab. Postconditions: the object is no longer in the room, the robot is holding the object, and the robot is no longer free."
      },
      {
        "name": "drop",
        "description": "The robot drops an object it is holding. Arguments: the robot, the object to be dropped, and the room where the object will be dropped. Preconditions: the robot is in the room and holding the object. Postconditions: the robot is no longer holding the object, the robot is free, and the object is in the room."
      },
      {
        "name": "push",
        "description": "The robot pushes a movable container from one room to another. Arguments: the robot, the container to be pushed, the starting room, and the destination room. Preconditions: the robot and the container are in the starting room, and the container is empty. Postconditions: the robot and the container are no longer in the starting room and are now in the destination room."
      },
      {
        "name": "put_in",
        "description": "This action allows a robot to place a grabbable object into a container in a room. Arguments: robot (the robot that will place the object), what (the grabbable object to be placed), in (the container where the object will be placed), where (the room where the action takes place). Preconditions: the robot, the container, and the object must be in the same room, and the robot must be holding the object. Postconditions: the robot is no longer holding the object, the object is in the container, and the robot is free."
      },
      {
        "name": "take_out",
        "description": "This action allows a robot to take a grabbable object out of a container in a room. Arguments: robot (the robot that will take the object), what (the grabbable object to be taken), from (the container where the object is located), where (the room where the action takes place). Preconditions: the robot, the container, and the object must be in the same room, and the robot must be free (not holding anything). Postconditions: the robot is holding the object, the object is no longer in the container, and the robot is no longer free."
      }
    ],
    "objects":  [
      {
        "type": "room",
        "description": "A location within the office setup where actions can take place."
      },
      {
        "type": "locatable",
        "description": "An object that can be located in a room, including robots and movable objects."
      },
      {
        "type": "robot",
        "description": "An entity capable of performing actions such as moving, grabbing, and pushing objects."
      },
      {
        "type": "grabbable",
        "description": "An object that can be grabbed by the robot, such as books or pens."
      },
      {
        "type": "container",
        "description": "An object that can hold other grabbable objects, such as shelves or lockers, and that can be pushed when it's empty."
      }
    ]
  }
}